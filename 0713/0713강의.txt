변수의 끌어올림(hoisting)
window		<--이미 존재하여 로딩돼있음
var a = 1;
	1) 변수의 선언 var a;
	2) 변수에 값을 대입 var a = 1
	
	변수의 선언 - window 객체에 먼저 추가(undefined)
	window.a = undefined;	->	var a = 1;
	
		window.a = undefined;
		console.log(a); //undefined
		var a = 1;
		

메모리 영역
데이터 영역

스택영역	- 함수가 호출될 때 실리는 메모리
			함수가 호출될 때 -> 메모리에 할당
			함수의 호출이되고 실행이 완료 -> 메모리에서 제거
		- 함수 실행영역({}) 안에 변수를 선언한다면?
		- 함수 실행영역의 변수는 -> 함수가 호출되서 실행될때
		
			예) function testFunc() {
					let a = 1;
					let b = 2;
				}
				
	함수 내부에 정의된 a, b는 함수가 호출되서 -> 스택 영역에 실릴때 사용 가능
	함수 호출이 종료 -> 스택 영역에서 함수가 제거 -> 함수 내부 변수 접근 불가
	
	함수 내부의 변수 유효범위
	-> 함수 내부에서만 사용가능
	-> 지역변수({}) 
		
	
	자바스크립트의 함수 - 1급 객체
		1. 함수를 인수로 쓸수 있다
		
		2. 함수를 반환값으로 사용할 수 있다
			- 클로저
		

브라우저 로딩 -> 로딩(내부의 main 함수 호출)

모든 변수 -> 스택 영역




변수 선언자
var - 변수 - 변경할 수 있는 값
let - 변수 - 변경할 수 있는 값(var과 동일)
			범위가 {}로 한정
const - 상수 - 변경할 수 없는 값			
	const로 일단 정의 -> 변경이 필요한 변수 -> let